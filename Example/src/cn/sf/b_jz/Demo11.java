package cn.sf.b_jz;
/*输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。*/
/*举个例子：一个二进制数1100，从右边数起第三位是处于最右边的一个1。减去1后，第三位变成0，它后面的两位0变成了1，而前面的1保持不变，因此得到的结果是1011
* 如1100&1011=1000.也就是说，把一个整数减去1，再和原整数做与运算，会把该整数最右边一个1变成0.*/
public class Demo11 {
    public int NumberOf1(int n) {
        int sum=0;//记录二进制中1的个数
        while (n!=0){//只要传入的二进制数不为零，就一直循环下去
            sum++;//先加1
            n=n&(n-1);//将二进制与二进制-1做相与运算，能将二进制数中的一个1减去
        }
        return sum;
    }
}
